#**Virtual Network In Resource Creation** 
---
Often when we create a resource, it is expected to configure it with a virtual network in the same subscription. 

The policies to be introduced in this article are implemented to evaluate these resource types with the _Deny_ or _Audit_ effect: 

| namespace | resource type | effect | 
|--|--|--|--|--|--|
| Microsoft.Storage | storageAccounts | Deny | 
| Microsoft.ServiceBus| namespaces | Audit | 
| Microsoft.SQL | servers| Audit | 
| Microsoft.SQL | servers/databases | Audit |
| Microsoft.SQL | instancePools | Deny |  
| Microsoft.SQL | managedInstances | Deny  | 
| Microsoft.SqlVirtualMachine | SqlVirtualMachines| Deny  | 
| Microsoft.KeyVault | vaults| Deny  | 

Except the policy for Microsoft.KeyVault/valuts, all the other policies are integrated in one policy initiative. 

[[_TOC_]] 

#**Construct the Policy Rule** 
---
We will take Storage Account as an example in this section to explain how to construct a custom policy rule to check the virtual network rules. 

To see all the policy rules: 
- [Deny Storage Account, SQL Virtual Machines, SQL Managed Instances](https://goclouddevops.visualstudio.com/Azure/_git/ITSAzure?path=%2Ffunctions%2FGovernance%2FPolicy%2FVNetPolicyRule%2FDenyStorageAccountSQLvmSQLmiPolicyRule.json&version=GBmaster)
- [Audit Service Bus](https://goclouddevops.visualstudio.com/Azure/_git/ITSAzure?path=%2Ffunctions%2FGovernance%2FPolicy%2FVNetPolicyRule%2FAuditServiceBusPolicyRule.json&version=GBmaster)
- [Audit SQL Server and Server Database](https://goclouddevops.visualstudio.com/Azure/_git/ITSAzure?path=%2Ffunctions%2FGovernance%2FPolicy%2FVNetPolicyRule%2FAuditSQLserverPolicyRule.json&version=GBmaster)
- [Deny Key Vault](https://goclouddevops.visualstudio.com/Azure/_git/ITSAzure?path=%2Ffunctions%2FGovernance%2FPolicy%2FVNetPolicyRule%2FDenyKeyVaultPolicyRule.json&version=GBmaster)

## Identify Requirements
- Each storage account must be attached with a subnet of a virtual network in the same subscription.
- Each storage account must not be attached with a subnet of a virtual network in a different subscription or configured without a virtual network. 

## Determine the Storage Account Properties
1. Browse to [Azure Template reference](https://docs.microsoft.com/en-us/azure/templates/).
2. In the **Filter by title** box, enter **storage accounts**.
3. Select **Reference/Template reference/Storage/<Version>/Storage Accounts**

   In [Template format](https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/2019-04-01/storageaccounts) section, there is a list of properties. One of them is **networkAcls**, which contains the settings of virtual network rules. 

4. Go to [NetworkRuleSet Object](https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/2019-04-01/storageaccounts#NetworkRuleSet), then go to [VirtualNetworkRule Object](https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/2019-04-01/storageaccounts#VirtualNetworkRule).
![vnRule.JPG](/.attachments/vnRule-43de3e83-aa7d-489f-99d5-810ed596da94.JPG)
The **id** property is what we are looking for to compare its value against our expected subnet ID. 

There are several more methods to determine the resource properties other than Azure Template reference. [See details](https://docs.microsoft.com/en-us/azure/governance/policy/tutorials/create-custom-policy-definition#determine-resource-properties).

## Find the Property Alias
From Azure Template reference, we know that the namespace of Storage Account is **Microsoft.Storage**, and the resource type is **storageAccounts**.

Use the PowerShell cmdlet **Get-AzPolicyAlias** to search for resource aliases. 
```
(Get-AzPolicyAlias -NamespaceMatch 'Microsoft.Storage' -ResourceTypeMatch ).Aliases
```
From the results we can see the alias for subnet ID: 

| Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*].id  |
|--|

There are several more methods to find the property alias other than the PowerShell cmdlet. [See details](https://docs.microsoft.com/en-us/azure/governance/policy/tutorials/create-custom-policy-definition#find-the-property-alias).

## Determine the Effect to Use
**Deny** is the effect we want as we do not want non-compliant storage account created in this case. 

We use Deny for all the resources listed at the top of this article except **Service Bus, SQL Database** and **SQL Server**. Instead, we use **auditIfNotExists**. 

The only way to configure virtual network rules on these 3 resource types is after they are already created, therefore, we can't deny them to be created, because there is no way for the user to configure virtual network rules beforehand.

For more options for Effect, please refer to the [Azure Policy Definition Structure](https://docs.microsoft.com/en-us/azure/governance/policy/concepts/definition-structure#policy-rule).

## Compose the Policy Rule
```
"if": {
       "allOf": [
           {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
           },
           {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*].id",
                "notIn": "[parameters('subnetIDs')]"
           }
        ]
},
"then": {
          "effect": "deny"
}
```
The rule denies the creation of a resource, if it is of type "Microsoft.Storage/storageAccounts" **AND** its subnet IDs are not in the passed array parameter subnetIDs. 

For more details about the logical operators such as "allOf", "equals", and "notIn", and the valid values for "field", please refer to the [Azure Policy definition structure](https://docs.microsoft.com/en-us/azure/governance/policy/concepts/definition-structure#policy-rule).

#**Policy Assignment** 
---
## [Set-DenyAduitStorageAzureSQLServiceBPolicy](https://goclouddevops.visualstudio.com/Azure/_git/ITSAzure?path=%2Ffunctions%2FGovernance%2FPolicy%2FVNetPolicyRule%2Fpolicy-denyAduitStorageAzureSQLServiceBPolicy.psm1&version=GBmaster)
- create 3 new policy definitions in the target subscription
- create a policy initiative with the 3 policy definitions created in the previous step
- if the $vnetNames is not null, get the subnet IDs of the specified virtual networks; if null, get the subnet IDs of all the virtual networks in the same subscription
- If the $resourceGroup is not null set the policy assignment at the resource group level, with an array of the subnet IDs found in the previous step; otherwise at the subscription level
```
Set-DenyAduitStorageAzureSQLServiceBPolicy -subscriptionid "someSubId0101" [-resourcegroup "dev-rg"] [-vnetNames @("some","vnet","names")]
```

## [Set-DenyKeyVaultPolicy](https://goclouddevops.visualstudio.com/Azure/_git/ITSAzure?path=%2Ffunctions%2FGovernance%2FPolicy%2Fpolicy-denyPublicIP.psm1&version=GBmaster&line=78&lineEnd=78&lineStartColumn=10&lineEndColumn=38&lineStyle=plain)
```
Set-DenyKeyVaultPolicy-subscriptionid "someSubId0101" [-vnetNames @("some","vnet","names")]
```
The only difference between the 2 methods is the policy definitions.

The policy definitions created by **Set-DenyStorageSqlServiceBPolicy** evaluates Storage Account, Azure SQL, and Service Bus, while the one created by **Set-DenyKeyVaultPolicy** only evaluates Key Vault.

#**Impact of the Policy** 
---
## Key Vault
Validation error triggered by the policy: 
![error1.JPG](/.attachments/error1-5f89ac09-09bb-40e0-857b-56d805c726c6.JPG)

## Storage Account
Trying to create a storage account with virtual network in another subscription:
![err1.JPG](/.attachments/err1-6a893096-3d7a-4e1c-8055-2f21a635ed39.JPG)
Validation error:
![err2.JPG](/.attachments/err2-5b7a22e3-5dd8-4138-b679-3438d6da7476.JPG)

## SQL managed Instances
![createNewVnet.JPG](/.attachments/createNewVnet-b1126570-4a82-4729-b22f-9b50ba55d4f6.JPG)
Validation error:
![error1.JPG](/.attachments/error1-f871257c-9a47-4d17-a24d-4e3cc8f0af46.JPG)

## SQL virtual machines
![error1.JPG](/.attachments/error1-4932887b-e003-4f86-88b0-7e2e29691509.JPG)
Validation error:
![error2.JPG](/.attachments/error2-c626ddfb-e449-432c-8e64-5a847da4ce9b.JPG)

### Service Bus
The policy doesn't prevent the creation of Service Bus. 

However, after a while from the creation, the service bus will be evaluated as a non-compliant resource if itâ€™s not configured with an expected virtual network. 
![comp1.JPG](/.attachments/comp1-4681b88a-c679-4906-973f-1d8cddca554a.JPG)

![comp2.JPG](/.attachments/comp2-b2b8c926-92b1-4e2a-a085-01f3e8e17e9d.JPG)

### Database and Database Server
A virtual network rule applies at server-level, not database-level. Any database hosted on a server configured with right virtual network is evaluated as compliant. Thus 


